const Canvas = require('canvas');
const {
    registerFont,
    createCanvas
} = require('canvas');
const {
    roundCorners
} = require('jimp-roundcorners');
const {
    getAverageColor
} = require('fast-average-color-node');
const Jimp = require('jimp');
const fs = require('fs');


async function imageCreation(data) {
    console.log(`[Info] Creating image for id '${data.tmdb_id}' (${data.name} (${data.year}))`);
    var width = 1920;
    var height = 1080;

    // register font NotoSans
    registerFont('./endpoints/plex/types/helper/fonts/Noto/NotoSans-Bold.ttf', {
        family: 'NotoBold'
    });
    registerFont('./endpoints/plex/types/helper/fonts/Noto/NotoSans-Regular.ttf', {
        family: 'NotoReg'
    });

    // get color
    const color = await getAverageColor(data.image.buffer);

    // create canvas
    const canvas = createCanvas(width, height);
    const ctx = canvas.getContext('2d');

    // blur image and resize to 1920 * 1080
    var image = await Jimp.read(data.image.buffer);
    image = await image.resize(width, height);
    image = await image.blur(11);

    // make background
    const background = new Canvas.Image();
    background.src = await image.getBufferAsync(Jimp.MIME_PNG);
    ctx.drawImage(background, 0, 0);

    // add drop shadow to all elements
    ctx.shadowColor = "black";
    ctx.shadowBlur = 5;
    ctx.shadowOffsetX = 3;
    ctx.shadowOffsetY = 3;

    // rezie poster
    var image2 = await Jimp.read(data.image.buffer2);
    image2 = await image2.resize(1000, 1500);
    image2 = await roundCorners(image2, {
        cornerRadious: {
            topLeft: 5,
            topRight: 5,
            bottomRight: 5,
            bottomLeft: 5
        }
    });

    // add poster
    const poster = new Canvas.Image();
    poster.src = await image2.getBufferAsync(Jimp.MIME_PNG);

    // add text
    ctx.font = '65pt NotoBold';
    ctx.fillStyle = '#fff';
    // if (color.isLight) {
    //     ctx.fillStyle = '#303030'
    //     ctx.shadowColor = "white";
    // }
    if (data.name.length > 20) {
        ctx.font = '40pt NotoBold';
    }
    ctx.fillText(data.name, 75, 300);

    // apply tagline
    ctx.font = '20pt NotoBold';
    ctx.fillText(data.tagline, 78, 345);
 
    // poster , left - right, up - down, width , height
    ctx.drawImage(poster, width - 650, height - 1000, 500, 750);

    // save image
    const buffer = canvas.toBuffer('image/png');
    fs.writeFileSync('./image.png', buffer);

    return;
}

module.exports = {
    imageCreation
}